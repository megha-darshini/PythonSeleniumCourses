{"name": "test_login_none_existing_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_login_negative.TestLoginNegative object at 0x7f8f2c429dc0>\n\n    @pytest.mark.tcid12\n    def test_login_none_existing_user(self):\n        #assert 1 == 2\n        #return\n        my_account = MyAccountSignedOut(self.driver)\n        my_account.go_to_my_account()\n        my_account.input_login_username('abcqwe')\n        my_account.input_login_password('asdsad')\n        my_account.click_login_btn()\n    \n        expected_error=\"error Error: The username abcqwe is not registered on this site. If you are unsure of your username, try your email address instead.\"\n>       my_account.wait_until_error_is_displayed(expected_error)\n\ntests/my_account/test_login_negative.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc/pages/MyAccountSignedOut.py:32: in wait_until_error_is_displayed\n    self.sl.wait_until_element_contains_text(self.ERRORS_UL,exp_error)\nsrc/SeleniumExtended.py:32: in wait_until_element_contains_text\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6c9a9d8fbd182519fd0403f6d7828784\")>\nmethod = <function text_to_be_present_in_element.<locals>._predicate at 0x7f8f2c8a7ca0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:87: TimeoutException"}, "attachments": [{"name": "screenshot", "source": "9a5aebbe-714f-43f5-8216-732b8bc820f3-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "bccc7773-6bf1-4350-9506-b4a30e65b270-attachment.txt", "type": "text/plain"}], "start": 1631794194653, "stop": 1631794209963, "uuid": "ec30fa2b-1cfc-4d7d-85f8-a609cac2836d", "historyId": "90e1ddeb5d6c242f3eccfe45117e6f86", "testCaseId": "de5e465bd8320d7c8ede1e20292d2e41", "fullName": "tests.my_account.test_login_negative.TestLoginNegative#test_login_none_existing_user", "labels": [{"name": "tag", "value": "tcid12"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "tests.my_account"}, {"name": "suite", "value": "test_login_negative"}, {"name": "subSuite", "value": "TestLoginNegative"}, {"name": "host", "value": "MNEELAKA-M-H1BQ"}, {"name": "thread", "value": "57830-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.my_account.test_login_negative"}]}